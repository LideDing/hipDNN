CMAKE_MINIMUM_REQUIRED (VERSION 3.5.1) 
MESSAGE(STATUS "CMAKE VERSION ${CMAKE_VERSION}")

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/../cmake ${CMAKE_CURRENT_SOURCE_DIR}/cmake ${HIP_PATH}/cmake ${MIOPEN_PATH}/lib/cmake/miopen)

execute_process(COMMAND ${HIP_PATH}/bin/hipconfig --platform OUTPUT_VARIABLE HIP_PLATFORM)
MESSAGE (STATUS "HIP_PATH : ${HIP_PATH}")

#Make sure HIP is installed in the target system
FIND_PACKAGE(HIP 1.0 REQUIRED)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/include/)
INCLUDE_DIRECTORIES(${HIP_PATH}/include/)
SET(CMAKE_CXX_COMPILER "${HIP_PATH}/bin/hipcc")

IF (HIP_PLATFORM MATCHES "hcc")
  FILE(GLOB HIPDNNSRCS "${CMAKE_CURRENT_SOURCE_DIR}/src/hcc_detail/*.cpp")
  INCLUDE_DIRECTORIES(${MIOPEN_PATH}/include/)
  LINK_DIRECTORIES(${MIOPEN_PATH}/lib)
  ADD_LIBRARY(hipdnn SHARED  ${HIPDNNSRCS})
  set_target_properties(hipdnn PROPERTIES LINKER_LANGUAGE CXX)
  TARGET_LINK_LIBRARIES(hipdnn MIOpen)
  INSTALL(TARGETS hipdnn 
  RUNTIME DESTINATION bin
  LIBRARY DESTINATION lib
  ARCHIVE DESTINATION lib)
ELSEIF()
  set(CMAKE_SHARED_LIBRARY_CXX_FLAGS "-Xcompiler ${CMAKE_SHARED_LIBRARY_CXX_FLAGS}")
  SET(HIPDNNSRCS "${CMAKE_CURRENT_SOURCE_DIR}/src/nvcc_detail/hipDNN_cudnn.cpp")
  LINK_DIRECTORIES(${CUDNN_PATH}/lib64)
  ADD_LIBRARY(hipdnn SHARED  ${HIPDNNSRCS})
  set_target_properties(hipdnn PROPERTIES CXX_EXTENSIONS NO)
  target_include_directories(hipdnn PUBLIC ${CUDNN_PATH}/include)
  TARGET_LINK_LIBRARIES(hipdnn cudnn)
  install(TARGETS hipdnn DESTINATION ${CMAKE_INSTALL_PREFIX}/hipdnn/lib)
  install(DIRECTORY include/ DESTINATION ${CMAKE_INSTALL_PREFIX}/hipdnn/include) 
ENDIF()
  


